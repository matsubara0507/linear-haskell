{-# LANGUAGE LinearTypes #-}

module Lib where

-- 引数を1度だけ使うというのは公式ドキュメント曰く
f1, f2 :: a %1-> a
f1 x = x     -- 引数をそのまま返すか
f2 x = f1 x  -- 引数を線形関数に渡す

-- これはダメ
-- f2' :: a %1-> a
-- f2' x = id x

-- パターンマッチをして各引数を1度だけずつ使う
f3 :: (a, b) %1-> (a, b)
f3 (x, y) = (f1 x, y)

-- 関数であれば、1度だけ呼び出し、その返り値も1だけ使う
f4 :: (a -> a) %1-> a -> a
f4 f x = f1 (f x)
